package com.company;

import javax.security.auth.Subject;
import javax.security.auth.callback.Callback;
import javax.security.auth.callback.CallbackHandler;
import javax.security.auth.callback.UnsupportedCallbackException;
import javax.security.auth.login.LoginContext;
import javax.security.auth.login.LoginException;
import javax.security.auth.spi.LoginModule;
import javax.swing.*;
import java.beans.EventHandler;
import java.io.IOException;
import java.security.PrivilegedAction;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.Map;

public class Main {

    public class SimpleLoginModule implements LoginModule {

        private Subject subject;
        private CallbackHandler callbackHandler;
        private Map<String, ?> options;

        public void initialize(Subject subject, CallbackHandler callbackHandler,
                               Map<String, ?> sharedState, Map<String, ?> options) {

            this.subject = subject;
            this.callbackHandler = callbackHandler;
            this.options = options;
        }

        @Override
        public boolean login() throws LoginException {
            return false;
        }

        @Override
        public boolean commit() throws LoginException {
            return false;
        }

        @Override
        public boolean abort() throws LoginException {
            return false;
        }

        @Override
        public boolean logout() throws LoginException {
            return false;
        }
    }


    public static class SimpleCallbackHandler implements CallbackHandler {

        private String username;
        private char[] password;

        public SimpleCallbackHandler(String username, char[] password) {

            this.username = username;
            this.password = password;
        }

        @Override
        public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {

        }
    }

    public static class JAASFrame extends JFrame {
        private JTextField username;
        private JPasswordField password;
        private JTextField propertyName;
        private JTextField propertyValue;

        public JAASFrame() {
            username = new JTextField(20);
            password = new JPasswordField(20);
            propertyName = new JTextField("user.home");
            propertyValue = new JTextField(20);
            propertyValue.setEditable(false);

            JPanel panel = new JPanel();
            panel.setLayout(new GridLayout(0, 2));
            panel.add(new JLabel("username:"));
            panel.add(username);
            panel.add(new JLabel("password:"));
            panel.add(password);
            panel.add(propertyName);
            panel.add(propertyValue);
            add(panel, BorderLayout.CENTER);

            JButton getValueButton = new JButton("Get Value");
            getValueButton.addActionListener(EventHandler.create(ActionListener.class, this, "getValue"));
            JPanel buttonPanel = new JPanel();
            buttonPanel.add(getValueButton);
            add(buttonPanel, BorderLayout.SOUTH);
            pack();
        }

        public void getValue() {

            try {
                LoginContext context = new LoginContext("Login", new SimpleCallbackHandler(
                        username.getText(), password.getPassword()));
                System.out.println("Trying to log in with " + username.getText() + " and " + new String(password.getPassword()));
                context.login();
                Subject subject = context.getSubject();
                propertyValue.setText(""
                        + Subject.doAsPrivileged(subject, new SysPropAction(propertyName.getText()), null));
                context.logout();
            } catch (LoginException ex) {
                ex.printStackTrace();
                Throwable ex2 = ex.getCause();
                if (ex2 != null) ex2.printStackTrace();
            }
        }
    }

    public static class SysPropAction implements PrivilegedAction<String> {
        public SysPropAction(String propertyName) {
            this.propertyName = propertyName;
        }

        public String run() {
            return System.getProperty(propertyName);
        }

        private String propertyName;
    }

    public static void main(String[] args) {

        JAASFrame frame = new JAASFrame();
        frame.setVisible(true);
        
    }
}

